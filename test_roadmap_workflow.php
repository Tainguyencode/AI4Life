<?php
session_start();
require_once 'config/database.php';
require_once 'includes/functions.php';
require_once 'includes/ai_service.php';

echo "<h1>Test Roadmap Workflow</h1>";

// Test database connection
try {
    $pdo = getConnection();
    echo "<h2>‚úÖ Database connection successful</h2>";
} catch (Exception $e) {
    echo "<h2>‚ùå Database connection failed</h2>";
    echo "<p>Error: " . $e->getMessage() . "</p>";
    exit;
}

// Test if user is logged in
if (!isLoggedIn()) {
    echo "<h2>‚ùå User not logged in</h2>";
    echo "<p>Please login first</p>";
    exit;
}

$user = getCurrentUser();
echo "<h2>‚úÖ User logged in</h2>";
echo "<p>User: " . htmlspecialchars($user['fullname']) . " (ID: " . $user['id'] . ")</p>";

// Test profile ID
$profileId = (int)($_GET['id'] ?? 0);
echo "<h2>Profile ID: " . $profileId . "</h2>";

if (!$profileId) {
    echo "<h2>‚ùå No profile ID provided</h2>";
    exit;
}

// Test fetching profile
try {
    $stmt = $pdo->prepare("SELECT sp.*, u.fullname FROM student_profiles sp JOIN users u ON sp.user_id = u.id WHERE sp.id = ? AND sp.user_id = ?");
    $stmt->execute([$profileId, $user['id']]);
    $profile = $stmt->fetch();
    
    if (!$profile) {
        echo "<h2>‚ùå Profile not found</h2>";
        exit;
    }
    
    echo "<h2>‚úÖ Profile found</h2>";
    echo "<p><strong>Profile ID:</strong> " . $profile['id'] . "</p>";
    echo "<p><strong>Interests:</strong> " . htmlspecialchars($profile['interests']) . "</p>";
    echo "<p><strong>Tech Interest:</strong> " . $profile['tech_interest'] . "/10</p>";
    echo "<p><strong>Creativity:</strong> " . $profile['creativity'] . "/10</p>";
    echo "<p><strong>Communication:</strong> " . $profile['communication'] . "/10</p>";
    
} catch (Exception $e) {
    echo "<h2>‚ùå Error fetching profile</h2>";
    echo "<p>Error: " . $e->getMessage() . "</p>";
    exit;
}

// Test AI Service
echo "<h2>Testing AI Service</h2>";
try {
    $aiService = new AIService();
    echo "<h3>‚úÖ AI Service initialized</h3>";
    
    // Test simple request
    $testPrompt = "Tr·∫£ v·ªÅ JSON: {\"test\": \"OK\"}";
    $result = $aiService->sendRequest($testPrompt);
    
    if ($result['success']) {
        echo "<h3>‚úÖ AI Service working</h3>";
        echo "<p>Response: " . htmlspecialchars($result['content']) . "</p>";
    } else {
        echo "<h3>‚ùå AI Service not working</h3>";
        echo "<p>Error: " . htmlspecialchars($result['error'] ?? 'Unknown error') . "</p>";
    }
    
} catch (Exception $e) {
    echo "<h3>‚ùå Error initializing AI Service</h3>";
    echo "<p>Error: " . $e->getMessage() . "</p>";
}

// Test roadmap generation
echo "<h2>Testing Roadmap Generation</h2>";
$testMajor = "·ª®ng d·ª•ng ph·∫ßn m·ªÅm";
echo "<p>Testing with major: " . $testMajor . "</p>";

try {
    $aiService = new AIService();
    $roadmapPrompt = "T·∫°o l·ªô tr√¨nh h·ªçc t·∫≠p chi ti·∫øt cho ng√†nh '{$testMajor}' t·∫°i FPT Polytechnic. Tr·∫£ v·ªÅ JSON v·ªõi c·∫•u tr√∫c ch√≠nh x√°c: {\"focus_subjects\": [{\"subject\": \"T√™n m√¥n h·ªçc\", \"reason\": \"L√Ω do c·∫ßn t·∫≠p trung\", \"difficulty\": \"ƒê·ªô kh√≥\"}], \"skills_to_improve\": [{\"skill\": \"T√™n k·ªπ nƒÉng\", \"current_level\": \"M·ª©c ƒë·ªô hi·ªán t·∫°i\", \"target_level\": \"M·ª©c ƒë·ªô m·ª•c ti√™u\", \"improvement_method\": \"C√°ch c·∫£i thi·ªán\"}], \"semester_roadmap\": [{\"semester\": \"K·ª≥ h·ªçc\", \"subjects\": [\"M√¥n h·ªçc\"], \"focus\": \"Tr·ªçng t√¢m\"}], \"career_opportunities\": [{\"position\": \"V·ªã tr√≠\", \"company_type\": \"Lo·∫°i c√¥ng ty\", \"salary_range\": \"M·ª©c l∆∞∆°ng\", \"requirements\": \"Y√™u c·∫ßu\"}]}. Ch·ªâ tr·∫£ v·ªÅ JSON, kh√¥ng c√≥ text th√™m.";
    
    $result = $aiService->sendRequest($roadmapPrompt);
    
    if ($result['success']) {
        echo "<h3>‚úÖ AI Roadmap Response</h3>";
        echo "<pre>" . htmlspecialchars($result['content']) . "</pre>";
        
        // Test JSON parsing
        preg_match('/\{.*\}/s', $result['content'], $matches);
        if (!empty($matches)) {
            $roadmapJson = json_decode($matches[0], true);
            if (json_last_error() === JSON_ERROR_NONE) {
                echo "<h3>‚úÖ JSON Parsed Successfully</h3>";
                echo "<pre>";
                print_r($roadmapJson);
                echo "</pre>";
            } else {
                echo "<h3>‚ùå JSON Parse Error</h3>";
                echo "<p>Error: " . json_last_error_msg() . "</p>";
            }
        } else {
            echo "<h3>‚ùå No JSON found in response</h3>";
        }
    } else {
        echo "<h3>‚ùå AI Roadmap Failed</h3>";
        echo "<p>Error: " . htmlspecialchars($result['error'] ?? 'Unknown error') . "</p>";
    }
    
} catch (Exception $e) {
    echo "<h3>‚ùå Error generating roadmap</h3>";
    echo "<p>Error: " . $e->getMessage() . "</p>";
}

// Test fallback roadmap
echo "<h2>Testing Fallback Roadmap</h2>";
$fallbackRoadmap = generateFallbackRoadmap($testMajor);
echo "<h3>‚úÖ Fallback Roadmap Generated</h3>";
echo "<pre>";
print_r($fallbackRoadmap);
echo "</pre>";

echo "<h2>üîß Test completed</h2>";
echo "<p><a href='profile-detail.php?id=" . $profileId . "'>Back to Profile Detail</a></p>";

function generateFallbackRoadmap($major) {
    $roadmaps = [
        '·ª®ng d·ª•ng ph·∫ßn m·ªÅm' => [
            'major' => '·ª®ng d·ª•ng ph·∫ßn m·ªÅm',
            'focus_subjects' => [
                ['subject' => 'L·∫≠p tr√¨nh Java', 'reason' => 'N·ªÅn t·∫£ng ph√°t tri·ªÉn ·ª©ng d·ª•ng', 'difficulty' => '8/10'],
                ['subject' => 'C∆° s·ªü d·ªØ li·ªáu', 'reason' => 'Qu·∫£n l√Ω d·ªØ li·ªáu hi·ªáu qu·∫£', 'difficulty' => '7/10']
            ],
            'skills_to_improve' => [
                ['skill' => 'T∆∞ duy logic', 'current_level' => 'Trung b√¨nh', 'target_level' => 'Cao', 'improvement_method' => 'Luy·ªán gi·∫£i b√†i t·∫≠p l·∫≠p tr√¨nh']
            ],
            'semester_roadmap' => [
                ['semester' => 'K·ª≥ 1-2', 'subjects' => ['Tin h·ªçc c∆° s·ªü', 'L·∫≠p tr√¨nh C++'], 'focus' => 'N·ªÅn t·∫£ng l·∫≠p tr√¨nh'],
                ['semester' => 'K·ª≥ 3-4', 'subjects' => ['L·∫≠p tr√¨nh Java', 'C∆° s·ªü d·ªØ li·ªáu'], 'focus' => 'Ph√°t tri·ªÉn ·ª©ng d·ª•ng']
            ],
            'career_opportunities' => [
                ['position' => 'L·∫≠p tr√¨nh vi√™n Java', 'company_type' => 'C√¥ng ty ph·∫ßn m·ªÅm', 'salary_range' => '15-30 tri·ªáu VNƒê/th√°ng', 'requirements' => 'Java, Spring Framework']
            ]
        ],
        'Thi·∫øt k·∫ø ƒë·ªì h·ªça' => [
            'major' => 'Thi·∫øt k·∫ø ƒë·ªì h·ªça',
            'focus_subjects' => [
                ['subject' => 'Thi·∫øt k·∫ø ƒë·ªì h·ªça c∆° b·∫£n', 'reason' => 'N·ªÅn t·∫£ng v·ªÅ m√†u s·∫Øc v√† b·ªë c·ª•c', 'difficulty' => '6/10'],
                ['subject' => 'Photoshop n√¢ng cao', 'reason' => 'C√¥ng c·ª• ch√≠nh cho thi·∫øt k·∫ø', 'difficulty' => '7/10']
            ],
            'skills_to_improve' => [
                ['skill' => 'Kh·∫£ nƒÉng s√°ng t·∫°o', 'current_level' => 'Trung b√¨nh', 'target_level' => 'Cao', 'improvement_method' => 'Tham kh·∫£o portfolio, th·ª±c h√†nh thi·∫øt k·∫ø']
            ],
            'semester_roadmap' => [
                ['semester' => 'K·ª≥ 1-2', 'subjects' => ['M·ªπ thu·∫≠t c∆° b·∫£n', 'Photoshop c∆° b·∫£n'], 'focus' => 'X√¢y d·ª±ng n·ªÅn t·∫£ng m·ªπ thu·∫≠t'],
                ['semester' => 'K·ª≥ 3-4', 'subjects' => ['Illustrator', 'Thi·∫øt k·∫ø UI/UX'], 'focus' => 'Ph√°t tri·ªÉn k·ªπ nƒÉng chuy√™n nghi·ªáp']
            ],
            'career_opportunities' => [
                ['position' => 'Graphic Designer', 'company_type' => 'Agency', 'salary_range' => '10-25 tri·ªáu VNƒê/th√°ng', 'requirements' => 'Th√†nh th·∫°o Photoshop, Illustrator']
            ]
        ],
        'Qu·∫£n tr·ªã kinh doanh' => [
            'major' => 'Qu·∫£n tr·ªã kinh doanh',
            'focus_subjects' => [
                ['subject' => 'Marketing c∆° b·∫£n', 'reason' => 'Hi·ªÉu v·ªÅ th·ªã tr∆∞·ªùng v√† kh√°ch h√†ng', 'difficulty' => '6/10'],
                ['subject' => 'Qu·∫£n l√Ω d·ª± √°n', 'reason' => 'K·ªπ nƒÉng l√£nh ƒë·∫°o v√† t·ªï ch·ª©c', 'difficulty' => '7/10']
            ],
            'skills_to_improve' => [
                ['skill' => 'K·ªπ nƒÉng giao ti·∫øp', 'current_level' => 'Trung b√¨nh', 'target_level' => 'Cao', 'improvement_method' => 'Tham gia thuy·∫øt tr√¨nh, networking']
            ],
            'semester_roadmap' => [
                ['semester' => 'K·ª≥ 1-2', 'subjects' => ['Kinh t·∫ø vi m√¥', 'Marketing c∆° b·∫£n'], 'focus' => 'X√¢y d·ª±ng n·ªÅn t·∫£ng kinh doanh'],
                ['semester' => 'K·ª≥ 3-4', 'subjects' => ['Digital Marketing', 'Qu·∫£n l√Ω d·ª± √°n'], 'focus' => 'Ph√°t tri·ªÉn k·ªπ nƒÉng kinh doanh s·ªë']
            ],
            'career_opportunities' => [
                ['position' => 'Marketing Specialist', 'company_type' => 'C√¥ng ty marketing', 'salary_range' => '8-20 tri·ªáu VNƒê/th√°ng', 'requirements' => 'Digital marketing, kinh nghi·ªám th·ª±c t·∫ø']
            ]
        ]
    ];
    
    return $roadmaps[$major] ?? $roadmaps['·ª®ng d·ª•ng ph·∫ßn m·ªÅm'];
}
?>
